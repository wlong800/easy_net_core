class Autogenerated {
  int code;
  String message;
  Data data;

  Autogenerated({this.code, this.message, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    message = json['message'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['code'] = this.code;
    data['message'] = this.message;
    if (this.data != null) {
      data['data'] = this.data.toJson();
    }
    return data;
  }
}

class Data {
  int page;
  int size;
  int totalPages;
  int totalElements;
  List<Content> content;

  Data(
      {this.page,
        this.size,
        this.totalPages,
        this.totalElements,
        this.content});

  Data.fromJson(Map<String, dynamic> json) {
    page = json['page'];
    size = json['size'];
    totalPages = json['totalPages'];
    totalElements = json['totalElements'];
    if (json['content'] != null) {
      content = new List<Content>();
      json['content'].forEach((v) {
        content.add(new Content.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['page'] = this.page;
    data['size'] = this.size;
    data['totalPages'] = this.totalPages;
    data['totalElements'] = this.totalElements;
    if (this.content != null) {
      data['content'] = this.content.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Content {
  int id;
  int referenceId;
  String referenceType;
  int likeNum;
  int commentNum;
  int transmitNum;
  int creatorId;
  String createTime;
  String updateTime;
  List<Null> tagIds;
  int voteId;
  String activeStatus;
  int hotNum;
  List<Content> content;
  Creator creator;
  bool hasLiked;
  ReferenceData referenceData;

  Content(
      {this.id,
        this.referenceId,
        this.referenceType,
        this.likeNum,
        this.commentNum,
        this.transmitNum,
        this.creatorId,
        this.createTime,
        this.updateTime,
        this.tagIds,
        this.voteId,
        this.activeStatus,
        this.hotNum,
        this.content,
        this.creator,
        this.hasLiked,
        this.referenceData});

  Content.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    referenceId = json['referenceId'];
    referenceType = json['referenceType'];
    likeNum = json['likeNum'];
    commentNum = json['commentNum'];
    transmitNum = json['transmitNum'];
    creatorId = json['creatorId'];
    createTime = json['createTime'];
    updateTime = json['updateTime'];
    if (json['tagIds'] != null) {
      tagIds = new List<Null>();
      json['tagIds'].forEach((v) {
        tagIds.add(new Null.fromJson(v));
      });
    }
    voteId = json['voteId'];
    activeStatus = json['activeStatus'];
    hotNum = json['hotNum'];
    if (json['content'] != null) {
      content = new List<Content>();
      json['content'].forEach((v) {
        content.add(new Content.fromJson(v));
      });
    }
    creator =
    json['creator'] != null ? new Creator.fromJson(json['creator']) : null;
    hasLiked = json['hasLiked'];
    referenceData = json['referenceData'] != null
        ? new ReferenceData.fromJson(json['referenceData'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['referenceId'] = this.referenceId;
    data['referenceType'] = this.referenceType;
    data['likeNum'] = this.likeNum;
    data['commentNum'] = this.commentNum;
    data['transmitNum'] = this.transmitNum;
    data['creatorId'] = this.creatorId;
    data['createTime'] = this.createTime;
    data['updateTime'] = this.updateTime;
    if (this.tagIds != null) {
      data['tagIds'] = this.tagIds.map((v) => v.toJson()).toList();
    }
    data['voteId'] = this.voteId;
    data['activeStatus'] = this.activeStatus;
    data['hotNum'] = this.hotNum;
    if (this.content != null) {
      data['content'] = this.content.map((v) => v.toJson()).toList();
    }
    if (this.creator != null) {
      data['creator'] = this.creator.toJson();
    }
    data['hasLiked'] = this.hasLiked;
    if (this.referenceData != null) {
      data['referenceData'] = this.referenceData.toJson();
    }
    return data;
  }
}

class Content {
  String type;
  String style;
  String text;
  int width;
  int height;
  double duration;
  String url;
  String thumb;
  String index;

  Content(
      {this.type,
        this.style,
        this.text,
        this.width,
        this.height,
        this.duration,
        this.url,
        this.thumb,
        this.index});

  Content.fromJson(Map<String, dynamic> json) {
    type = json['type'];
    style = json['style'];
    text = json['text'];
    width = json['width'];
    height = json['height'];
    duration = json['duration'];
    url = json['url'];
    thumb = json['thumb'];
    index = json['index'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['type'] = this.type;
    data['style'] = this.style;
    data['text'] = this.text;
    data['width'] = this.width;
    data['height'] = this.height;
    data['duration'] = this.duration;
    data['url'] = this.url;
    data['thumb'] = this.thumb;
    data['index'] = this.index;
    return data;
  }
}

class Creator {
  int id;
  String username;
  String gender;
  Geo geo;
  String summary;
  String avatar;
  int regionId;

  Creator(
      {this.id,
        this.username,
        this.gender,
        this.geo,
        this.summary,
        this.avatar,
        this.regionId});

  Creator.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    username = json['username'];
    gender = json['gender'];
    geo = json['geo'] != null ? new Geo.fromJson(json['geo']) : null;
    summary = json['summary'];
    avatar = json['avatar'];
    regionId = json['regionId'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['username'] = this.username;
    data['gender'] = this.gender;
    if (this.geo != null) {
      data['geo'] = this.geo.toJson();
    }
    data['summary'] = this.summary;
    data['avatar'] = this.avatar;
    data['regionId'] = this.regionId;
    return data;
  }
}

class Geo {
  double lat;
  double lon;

  Geo({this.lat, this.lon});

  Geo.fromJson(Map<String, dynamic> json) {
    lat = json['lat'];
    lon = json['lon'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['lat'] = this.lat;
    data['lon'] = this.lon;
    return data;
  }
}

class ReferenceData {
  Event event;

  ReferenceData({this.event});

  ReferenceData.fromJson(Map<String, dynamic> json) {
    event = json['event'] != null ? new Event.fromJson(json['event']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.event != null) {
      data['event'] = this.event.toJson();
    }
    return data;
  }
}

class Event {
  int id;
  String title;
  String sourceType;
  int sourceId;
  int importance;
  String eventStartTime;
  String eventEndTime;
  int registrationFormId;
  String registrationStartTime;
  String registrationEndTime;
  String coverUrl;
  String bgColor;
  String cardStyle;
  String eventType;
  bool onlineFlag;
  bool ignoreRegionFlag;
  bool onlySelfFlag;
  int cityAreaId;
  Geo geo;
  int siteId;
  int merchantId;
  int productId;
  int price;
  int minOfPeople;
  int maxOfMen;
  int maxOfWomen;
  int maxOfSecret;
  int registeredOfflineOfMen;
  int registeredOfflineOfWomen;
  int registeredOnlineOfMen;
  int registeredOnlineOfWomen;
  int registeredOnlineOfSecret;
  String groupStatus;
  String summary;
  int createBy;
  String createTime;
  bool needRegistration;
  String activeStatus;
  String groupQRCode;
  bool allowCancelRegistration;
  String eventTypeName;
  String registrationStatus;
  Site site;
  List<Tags> tags;
  List<RelatedTags> relatedTags;

  Event(
      {this.id,
        this.title,
        this.sourceType,
        this.sourceId,
        this.importance,
        this.eventStartTime,
        this.eventEndTime,
        this.registrationFormId,
        this.registrationStartTime,
        this.registrationEndTime,
        this.coverUrl,
        this.bgColor,
        this.cardStyle,
        this.eventType,
        this.onlineFlag,
        this.ignoreRegionFlag,
        this.onlySelfFlag,
        this.cityAreaId,
        this.geo,
        this.siteId,
        this.merchantId,
        this.productId,
        this.price,
        this.minOfPeople,
        this.maxOfMen,
        this.maxOfWomen,
        this.maxOfSecret,
        this.registeredOfflineOfMen,
        this.registeredOfflineOfWomen,
        this.registeredOnlineOfMen,
        this.registeredOnlineOfWomen,
        this.registeredOnlineOfSecret,
        this.groupStatus,
        this.summary,
        this.createBy,
        this.createTime,
        this.needRegistration,
        this.activeStatus,
        this.groupQRCode,
        this.allowCancelRegistration,
        this.eventTypeName,
        this.registrationStatus,
        this.site,
        this.tags,
        this.relatedTags});

  Event.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    title = json['title'];
    sourceType = json['sourceType'];
    sourceId = json['sourceId'];
    importance = json['importance'];
    eventStartTime = json['eventStartTime'];
    eventEndTime = json['eventEndTime'];
    registrationFormId = json['registrationFormId'];
    registrationStartTime = json['registrationStartTime'];
    registrationEndTime = json['registrationEndTime'];
    coverUrl = json['coverUrl'];
    bgColor = json['bgColor'];
    cardStyle = json['cardStyle'];
    eventType = json['eventType'];
    onlineFlag = json['onlineFlag'];
    ignoreRegionFlag = json['ignoreRegionFlag'];
    onlySelfFlag = json['onlySelfFlag'];
    cityAreaId = json['cityAreaId'];
    geo = json['geo'] != null ? new Geo.fromJson(json['geo']) : null;
    siteId = json['siteId'];
    merchantId = json['merchantId'];
    productId = json['productId'];
    price = json['price'];
    minOfPeople = json['minOfPeople'];
    maxOfMen = json['maxOfMen'];
    maxOfWomen = json['maxOfWomen'];
    maxOfSecret = json['maxOfSecret'];
    registeredOfflineOfMen = json['registeredOfflineOfMen'];
    registeredOfflineOfWomen = json['registeredOfflineOfWomen'];
    registeredOnlineOfMen = json['registeredOnlineOfMen'];
    registeredOnlineOfWomen = json['registeredOnlineOfWomen'];
    registeredOnlineOfSecret = json['registeredOnlineOfSecret'];
    groupStatus = json['groupStatus'];
    summary = json['summary'];
    createBy = json['createBy'];
    createTime = json['createTime'];
    needRegistration = json['needRegistration'];
    activeStatus = json['activeStatus'];
    groupQRCode = json['groupQRCode'];
    allowCancelRegistration = json['allowCancelRegistration'];
    eventTypeName = json['eventTypeName'];
    registrationStatus = json['registrationStatus'];
    site = json['site'] != null ? new Site.fromJson(json['site']) : null;
    if (json['tags'] != null) {
      tags = new List<Tags>();
      json['tags'].forEach((v) {
        tags.add(new Tags.fromJson(v));
      });
    }
    if (json['relatedTags'] != null) {
      relatedTags = new List<RelatedTags>();
      json['relatedTags'].forEach((v) {
        relatedTags.add(new RelatedTags.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['title'] = this.title;
    data['sourceType'] = this.sourceType;
    data['sourceId'] = this.sourceId;
    data['importance'] = this.importance;
    data['eventStartTime'] = this.eventStartTime;
    data['eventEndTime'] = this.eventEndTime;
    data['registrationFormId'] = this.registrationFormId;
    data['registrationStartTime'] = this.registrationStartTime;
    data['registrationEndTime'] = this.registrationEndTime;
    data['coverUrl'] = this.coverUrl;
    data['bgColor'] = this.bgColor;
    data['cardStyle'] = this.cardStyle;
    data['eventType'] = this.eventType;
    data['onlineFlag'] = this.onlineFlag;
    data['ignoreRegionFlag'] = this.ignoreRegionFlag;
    data['onlySelfFlag'] = this.onlySelfFlag;
    data['cityAreaId'] = this.cityAreaId;
    if (this.geo != null) {
      data['geo'] = this.geo.toJson();
    }
    data['siteId'] = this.siteId;
    data['merchantId'] = this.merchantId;
    data['productId'] = this.productId;
    data['price'] = this.price;
    data['minOfPeople'] = this.minOfPeople;
    data['maxOfMen'] = this.maxOfMen;
    data['maxOfWomen'] = this.maxOfWomen;
    data['maxOfSecret'] = this.maxOfSecret;
    data['registeredOfflineOfMen'] = this.registeredOfflineOfMen;
    data['registeredOfflineOfWomen'] = this.registeredOfflineOfWomen;
    data['registeredOnlineOfMen'] = this.registeredOnlineOfMen;
    data['registeredOnlineOfWomen'] = this.registeredOnlineOfWomen;
    data['registeredOnlineOfSecret'] = this.registeredOnlineOfSecret;
    data['groupStatus'] = this.groupStatus;
    data['summary'] = this.summary;
    data['createBy'] = this.createBy;
    data['createTime'] = this.createTime;
    data['needRegistration'] = this.needRegistration;
    data['activeStatus'] = this.activeStatus;
    data['groupQRCode'] = this.groupQRCode;
    data['allowCancelRegistration'] = this.allowCancelRegistration;
    data['eventTypeName'] = this.eventTypeName;
    data['registrationStatus'] = this.registrationStatus;
    if (this.site != null) {
      data['site'] = this.site.toJson();
    }
    if (this.tags != null) {
      data['tags'] = this.tags.map((v) => v.toJson()).toList();
    }
    if (this.relatedTags != null) {
      data['relatedTags'] = this.relatedTags.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Geo {
  int lat;
  int lon;

  Geo({this.lat, this.lon});

  Geo.fromJson(Map<String, dynamic> json) {
    lat = json['lat'];
    lon = json['lon'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['lat'] = this.lat;
    data['lon'] = this.lon;
    return data;
  }
}

class Site {
  int id;
  String name;
  String cover;
  int merchantId;
  String address;
  String gps;
  int attentionType;
  List<String> phones;

  Site(
      {this.id,
        this.name,
        this.cover,
        this.merchantId,
        this.address,
        this.gps,
        this.attentionType,
        this.phones});

  Site.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    cover = json['cover'];
    merchantId = json['merchantId'];
    address = json['address'];
    gps = json['gps'];
    attentionType = json['attentionType'];
    phones = json['phones'].cast<String>();
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['cover'] = this.cover;
    data['merchantId'] = this.merchantId;
    data['address'] = this.address;
    data['gps'] = this.gps;
    data['attentionType'] = this.attentionType;
    data['phones'] = this.phones;
    return data;
  }
}

class Tags {
  int id;
  String name;
  String abbreviation;
  int categoryId;
  String module;

  Tags({this.id, this.name, this.abbreviation, this.categoryId, this.module});

  Tags.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    abbreviation = json['abbreviation'];
    categoryId = json['categoryId'];
    module = json['module'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['abbreviation'] = this.abbreviation;
    data['categoryId'] = this.categoryId;
    data['module'] = this.module;
    return data;
  }
}
